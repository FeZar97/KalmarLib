#ifndef KALMARKALIBRATOR_H
#define KALMARKALIBRATOR_H

#include <QObject>

#include "KalmarTract.h"

#define     KALMAR_KALIBRATOR_DEFAULT_SIGNAL_TYPE  KALIBRATOR_SINUS
#define     KALMAR_KALIBRATOR_MIN_MOD_FREQ         1000
#define     KALMAR_KALIBRATOR_MAX_MOD_FREQ         50000
#define     KALMAR_KALIBRATOR_DEFAULT_MOD_FREQ     10000
#define     KALMAR_KALIBRATOR_DEFAULT_ATT_STATE    KALIBRATOR_ATT_OFF
#define     KALMAR_KALIBRATOR_DEFAULT_OUT          KALIBRATOR_INTERNAL
#define     KALMAR_KALIBRATOR_DEFAULT_WORK_STATE   KALIBRATOR_OFF
#define     KALMAR_KALIBRATOR_ATT_STEP             2

// kalibrator modulation signal states
enum KALMAR_KALIBRATOR_MOD_SIGNAL {
    KALIBRATOR_SINUS,
    KALIBRATOR_RADIOIMP
};

// kalibrator state
enum KALMAR_KALIBRATOR_STATE {
    KALIBRATOR_OFF,
    KALIBRATOR_ON
};

// kalibrator out signal types
enum KALMAR_KALIBRATOR_OUT_TYPE {
    KALIBRATOR_INTERNAL,
    KALIBRATOR_EXTERNAL
};

// kalibrator attenuator states
enum KALMAR_KALIBRATOR_ATT_STATE {
    KALIBRATOR_ATT_OFF  = 0,  KALIBRATOR_ATT_2DB  = 2,  KALIBRATOR_ATT_4DB = 4,
    KALIBRATOR_ATT_6DB  = 6,  KALIBRATOR_ATT_8DB  = 8,  KALIBRATOR_ATT_10DB = 10,
    KALIBRATOR_ATT_12DB = 12, KALIBRATOR_ATT_14DB = 14, KALIBRATOR_ATT_16DB = 16,
    KALIBRATOR_ATT_18DB = 18, KALIBRATOR_ATT_20DB = 20, KALIBRATOR_ATT_22DB = 22,
    KALIBRATOR_ATT_24DB = 24, KALIBRATOR_ATT_26DB = 26, KALIBRATOR_ATT_28DB = 28,
    KALIBRATOR_ATT_30DB = 30, KALIBRATOR_ATT_32DB = 32, KALIBRATOR_ATT_34DB = 34,
    KALIBRATOR_ATT_36DB = 36, KALIBRATOR_ATT_38DB = 38, KALIBRATOR_ATT_40DB = 40,
    KALIBRATOR_ATT_42DB = 42, KALIBRATOR_ATT_44DB = 44, KALIBRATOR_ATT_46DB = 46,
    KALIBRATOR_ATT_48DB = 48, KALIBRATOR_ATT_50DB = 50, KALIBRATOR_ATT_52DB = 52,
    KALIBRATOR_ATT_54DB = 54, KALIBRATOR_ATT_56DB = 56, KALIBRATOR_ATT_58DB = 58,
    KALIBRATOR_ATT_60DB = 60
};

class KalmarKalibrator : public QObject
{
    Q_OBJECT

    KALMAR_KALIBRATOR_MOD_SIGNAL m_modSignalType{KALMAR_KALIBRATOR_DEFAULT_SIGNAL_TYPE};
    int                          m_modulationFreq{KALMAR_KALIBRATOR_DEFAULT_MOD_FREQ};
    KALMAR_KALIBRATOR_ATT_STATE  m_attState{KALMAR_KALIBRATOR_DEFAULT_ATT_STATE};
    KALMAR_KALIBRATOR_OUT_TYPE   m_outType{KALMAR_KALIBRATOR_DEFAULT_OUT};
    KALMAR_KALIBRATOR_STATE      m_workState{KALMAR_KALIBRATOR_DEFAULT_WORK_STATE};

public:
    explicit KalmarKalibrator(QObject *parent = nullptr);

    KALMAR_KALIBRATOR_MOD_SIGNAL getModSignalType() const;
    void setModSignalType(const KALMAR_KALIBRATOR_MOD_SIGNAL& modSignalType);

    int getModulationFreq() const;
    void setModulationFreq(int modulationFreq);

    KALMAR_KALIBRATOR_ATT_STATE getAttState() const;
    void setAttState(const KALMAR_KALIBRATOR_ATT_STATE& attState);

    KALMAR_KALIBRATOR_OUT_TYPE getOutType() const;
    void setOutType(const KALMAR_KALIBRATOR_OUT_TYPE& outType);

    KALMAR_KALIBRATOR_STATE getWorkState() const;
    void setWorkState(const KALMAR_KALIBRATOR_STATE& workState);

signals:
    void sendKalibratorModulationFreqToPort();
    void sendKalibratorAttStateToPort();
    void sendKalibratorWorkStateToPort();
    void sendKalibratorSignalTypeToPort(KALMAR_TRACT_INDEX supportTractIdx);
};

#endif // KALMARKALIBRATOR_H
